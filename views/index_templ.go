// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	// "fmt"
	"fmt"
	"go_backend/views/components"
	"time"
)

type TemperatureData struct {
	DateTime            time.Time
	Hour                string
	Temperature         float64
	FeelsLike           float64
	Weather             string
	PrecipitationChance float64
	WindSpeed           float64
	WindDirection       string
}

// type TemperatureDataByDay struct {
// 	Day    string
// 	Hours  []*TemperatureData
// }

type DailyChartData struct {
	Labels          []string
	TemperatureData []float64
	FeelsLikeData   []float64
}

type WeeklyChartData struct {
	Day                    string
	MinTemp                float64
	MaxTemp                float64
	AvgTemp                float64
	AvgWindSpeed           float64
	AvgPrecipitationChance float64
}

type TemperatureDataViewModel struct {
	CurrentData *TemperatureData
	DailyData   *DailyChartData
	WeeklyData  []*WeeklyChartData
}

type OldTemperatureDataViewModel struct {
	CurrentData *TemperatureData
	DailyData   *DailyChartData
	// DailyData   *TemperatureDataByDay
	// WeeklyData  map[string]*TemperatureDataByDay
}

func Index(data TemperatureDataViewModel) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex h-screen flex-col md:flex-row md:overflow-hidden\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Sidebar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"flex-grow p-6 md:overflow-y-auto md:p-12\"><div class=\"container\"><nav aria-label=\"Breadcrumb\" class=\"mb-6 block\"><ol class=\"flex text-xl md:text-2xl\"><li class=\"text-gray-500\"><a href=\"/\">Temperature</a></li></ol><hr class=\"bg-black mt-4\"></nav><div class=\"grid w-full lg:grid-cols-2 gap-4\"><div class=\"h-1/2\"><div><div class=\"my-auto grid items-center justify-center gap-10 sm:grid-cols-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Card("Wind Direction", data.CurrentData.WindDirection).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Card("Wind Speed", fmt.Sprintf("%.2f", data.CurrentData.WindSpeed)+"Km/hr").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Card("Feels Like", fmt.Sprintf("%.2f", data.CurrentData.FeelsLike)+"°C").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Card("Current Temperature", fmt.Sprintf("%.2f", data.CurrentData.Temperature)+"°C").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div><div class=\"h-1/2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.DailyChart(data.DailyData.Labels, data.DailyData.TemperatureData, data.DailyData.FeelsLikeData).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><br><div class=\"w-full\"><div class=\"flex w-full flex-col md:col-span-4\"><h2 class=\"mb-4 text-xl md:text-2xl\">7 Day Forcast</h2><div class=\"flex grow flex-col justify-between rounded-xl bg-gray-50 p-4\"><div class=\"bg-white px-6\"></div></div></div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
